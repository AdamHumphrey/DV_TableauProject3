<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0318.1720                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='ARTICLELEATHER_REVISED (C##CS329E_DAS3734)' inline='true' name='oracle.42116.691902835650' version='9.0'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_DAS3734' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_das3734'>
        <relation name='ARTICLELEATHER_REVISED' table='[C##CS329E_DAS3734].[ARTICLELEATHER_REVISED]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>AL_COUNTRY_AREA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AL_COUNTRY_AREA]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_COUNTRY_AREA</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>60</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AL_YEAR]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_YEAR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_COMM_CODE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AL_COMM_CODE]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_COMM_CODE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_COMMODITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AL_COMMODITY]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_COMMODITY</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_FLOW</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AL_FLOW]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_FLOW</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>20</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_TRADE_USD</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AL_TRADE_USD]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_TRADE_USD</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_WEIGHT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AL_WEIGHT]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_WEIGHT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_QUANTITY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AL_QUANTITY_NAME]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_QUANTITY_NAME</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_QUANTITY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AL_QUANTITY]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_QUANTITY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AL_SERIAL_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AL_SERIAL_ID]</local-name>
            <parent-name>[ARTICLELEATHER_REVISED]</parent-name>
            <remote-alias>AL_SERIAL_ID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Al Commodity' datatype='string' name='[AL_COMMODITY]' role='dimension' type='nominal'>
      </column>
      <column caption='Al Comm Code' datatype='real' name='[AL_COMM_CODE]' role='dimension' type='ordinal'>
      </column>
      <column caption='Al Country Area' datatype='string' name='[AL_COUNTRY_AREA]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Al Flow' datatype='string' name='[AL_FLOW]' role='dimension' type='nominal'>
      </column>
      <column caption='Al Quantity' datatype='real' name='[AL_QUANTITY]' role='measure' type='quantitative'>
      </column>
      <column caption='Al Quantity Name' datatype='string' name='[AL_QUANTITY_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Al Serial Id' datatype='real' name='[AL_SERIAL_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Al Trade Usd' datatype='real' name='[AL_TRADE_USD]' role='measure' type='quantitative'>
      </column>
      <column caption='Al Weight' datatype='real' name='[AL_WEIGHT]' role='measure' type='quantitative'>
      </column>
      <column caption='Al Year' datatype='real' name='[AL_YEAR]' role='dimension' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[AL_WEIGHT]' derivation='Sum' name='[sum:AL_WEIGHT:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[:Measure Names]' type='shape'>
            <map to='circle'>
              <bucket>&quot;[oracle.42116.691902835650].[sum:AL_WEIGHT:qk]&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;[oracle.42116.690784421298].[sum:AMMO_WEIGHT:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='oracle.42116.690784421298'>
        <column caption='Ammo Weight' datatype='real' name='[AMMO_WEIGHT]' role='measure' type='quantitative'>
        </column>
        <column-instance column='[AMMO_WEIGHT]' derivation='Sum' name='[sum:AMMO_WEIGHT:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
    </datasource>
    <datasource caption='AMMO_REVISED (C##CS329E_DAS3734)' inline='true' name='oracle.42116.690784421298' version='9.0'>
      <connection authentication='RDBMS' class='oracle' port='1521' schema='C##CS329E_DAS3734' server='129.152.144.84' service='ORCL.usuniversi01134.oraclecloud.internal' username='C##cs329e_das3734'>
        <relation name='AMMO_REVISED' table='[C##CS329E_DAS3734].[AMMO_REVISED]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>AMMO_COUNTRY_AREA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AMMO_COUNTRY_AREA]</local-name>
            <parent-name>[AMMO_REVISED]</parent-name>
            <remote-alias>AMMO_COUNTRY_AREA</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>60</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMMO_YEAR</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AMMO_YEAR]</local-name>
            <parent-name>[AMMO_REVISED]</parent-name>
            <remote-alias>AMMO_YEAR</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMMO_COMM_CODE</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AMMO_COMM_CODE]</local-name>
            <parent-name>[AMMO_REVISED]</parent-name>
            <remote-alias>AMMO_COMM_CODE</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMMO_COMMODITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AMMO_COMMODITY]</local-name>
            <parent-name>[AMMO_REVISED]</parent-name>
            <remote-alias>AMMO_COMMODITY</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>200</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMMO_FLOW</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AMMO_FLOW]</local-name>
            <parent-name>[AMMO_REVISED]</parent-name>
            <remote-alias>AMMO_FLOW</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>70</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMMO_TRADE_USD</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AMMO_TRADE_USD]</local-name>
            <parent-name>[AMMO_REVISED]</parent-name>
            <remote-alias>AMMO_TRADE_USD</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMMO_WEIGHT</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AMMO_WEIGHT]</local-name>
            <parent-name>[AMMO_REVISED]</parent-name>
            <remote-alias>AMMO_WEIGHT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMMO_QUANTITY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AMMO_QUANTITY_NAME]</local-name>
            <parent-name>[AMMO_REVISED]</parent-name>
            <remote-alias>AMMO_QUANTITY_NAME</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>0</scale>
            <width>50</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation charset='1' flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_CHR{charset=873,charform=1}&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMMO_QUANTITY</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AMMO_QUANTITY]</local-name>
            <parent-name>[AMMO_REVISED]</parent-name>
            <remote-alias>AMMO_QUANTITY</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMMO_SERIAL_ID</remote-name>
            <remote-type>131</remote-type>
            <local-name>[AMMO_SERIAL_ID]</local-name>
            <parent-name>[AMMO_REVISED]</parent-name>
            <remote-alias>AMMO_SERIAL_ID</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQLT_NUM&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ammo Commodity' datatype='string' name='[AMMO_COMMODITY]' role='dimension' type='nominal'>
      </column>
      <column caption='Ammo Comm Code' datatype='real' name='[AMMO_COMM_CODE]' role='dimension' type='ordinal'>
      </column>
      <column caption='Ammo Country Area' datatype='string' name='[AMMO_COUNTRY_AREA]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Ammo Flow' datatype='string' name='[AMMO_FLOW]' role='dimension' type='nominal'>
      </column>
      <column caption='Ammo Quantity' datatype='real' name='[AMMO_QUANTITY]' role='measure' type='quantitative'>
      </column>
      <column caption='Ammo Quantity Name' datatype='string' name='[AMMO_QUANTITY_NAME]' role='dimension' type='nominal'>
      </column>
      <column caption='Ammo Serial Id' datatype='real' name='[AMMO_SERIAL_ID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Ammo Trade Usd' datatype='real' name='[AMMO_TRADE_USD]' role='measure' type='quantitative'>
      </column>
      <column caption='Ammo Weight' datatype='real' name='[AMMO_WEIGHT]' role='measure' type='quantitative'>
      </column>
      <column caption='Ammo Year' datatype='date' datatype-customized='true' name='[AMMO_YEAR]' role='dimension' type='quantitative'>
      </column>
      <column datatype='integer' name='[Ammo Weight (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='7' formula='[AMMO_WEIGHT]' peg='0' size='1e+07' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column-instance column='[AMMO_FLOW]' derivation='Count' name='[cnt:AMMO_FLOW:qk]' pivot='key' type='quantitative' />
      <column-instance column='[AMMO_COUNTRY_AREA]' derivation='None' name='[none:AMMO_COUNTRY_AREA:nk]' pivot='key' type='nominal' />
      <column-instance column='[AMMO_FLOW]' derivation='None' name='[none:AMMO_FLOW:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[cnt:AMMO_FLOW:qk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Export&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Re-Export&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Re-Import&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Import&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AMMO_FLOW:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Export&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Re-Export&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Re-Import&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Import&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AMMO_COUNTRY_AREA:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Belgium-Luxembourg&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>%null%</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;China, Macao SAR&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Turks and Caicos Isds&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bosnia Herzegovina&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Cook Isds&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Fmr Fed. Rep. of Germany&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>&quot;United Rep. of Tanzania&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;China, Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9edae5'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Faeroe Isds&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Neth. Antilles&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Rep. of Korea&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;So. African Customs Union&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Other Asia, nes&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;TFYR of Macedonia&quot;</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>&quot;Wallis and Futuna Isds&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Czech Rep.&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Occ. Palestinian Terr.&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Central African Rep.&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Serbia and Montenegro&quot;</bucket>
            </map>
            <map to='#c7c7c7'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#dbdb8d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Dominican Rep.&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Rep. of Moldova&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Solomon Isds&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='oracle.42116.690784421298'>
      <column caption='Ammo Country Area' datatype='string' name='[AMMO_COUNTRY_AREA]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Ammo Flow' datatype='string' name='[AMMO_FLOW]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[AMMO_COUNTRY_AREA]' derivation='None' name='[none:AMMO_COUNTRY_AREA:nk]' pivot='key' type='nominal' />
      <column-instance column='[AMMO_FLOW]' derivation='None' name='[none:AMMO_FLOW:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='oracle.42116.691902835650'>
      <column caption='Al Country Area' datatype='string' name='[AL_COUNTRY_AREA]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
      </column>
      <column caption='Al Flow' datatype='string' name='[AL_FLOW]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[AL_COUNTRY_AREA]' derivation='None' name='[none:AL_COUNTRY_AREA:nk]' pivot='key' type='nominal' />
      <column-instance column='[AL_FLOW]' derivation='None' name='[none:AL_FLOW:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-relationship source='oracle.42116.691902835650' target='oracle.42116.690784421298'>
      <column-mapping>
        <map key='[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]' value='[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]' />
        <map key='[oracle.42116.691902835650].[none:AL_FLOW:nk]' value='[oracle.42116.690784421298].[none:AMMO_FLOW:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='AMMO_REVISED (C##CS329E_DAS3734)' name='oracle.42116.690784421298' />
            <datasource caption='ARTICLELEATHER_REVISED (C##CS329E_DAS3734)' name='oracle.42116.691902835650' />
          </datasources>
          <datasource-dependencies datasource='oracle.42116.690784421298'>
            <column caption='Ammo Country Area' datatype='string' name='[AMMO_COUNTRY_AREA]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Ammo Trade Usd' datatype='real' name='[AMMO_TRADE_USD]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[AMMO_COUNTRY_AREA]' derivation='None' name='[none:AMMO_COUNTRY_AREA:nk]' pivot='key' type='nominal' />
            <column-instance column='[AMMO_TRADE_USD]' derivation='Sum' name='[sum:AMMO_TRADE_USD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42116.691902835650'>
            <column caption='Al Trade Usd' datatype='real' name='[AL_TRADE_USD]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[AL_TRADE_USD]' derivation='Sum' name='[sum:AL_TRADE_USD:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[oracle.42116.690784421298].[sum:AMMO_TRADE_USD:qk]' included-values='in-range'>
            <min>5986087109.0</min>
            <max>84191388012.0</max>
          </filter>
          <slices>
            <column>[oracle.42116.690784421298].[sum:AMMO_TRADE_USD:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[oracle.42116.691902835650].[sum:AL_TRADE_USD:qk]' palette='tableau-orange-blue' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#898989' />
            <format attr='line-pattern' id='refline0' value='none' />
            <format attr='stroke-color' id='refline0' value='#acacac' />
            <format attr='color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[oracle.42116.691902835650].[sum:AL_TRADE_USD:qk]' />
              <lod column='[oracle.42116.691902835650].[sum:AL_TRADE_USD:qk]' />
            </encodings>
            <reference-line axis-column='[oracle.42116.690784421298].[sum:AMMO_TRADE_USD:qk]' enable-instant-analytics='false' formula='sum' id='refline0' label-type='none' scope='per-cell' value-column='[oracle.42116.691902835650].[sum:AL_TRADE_USD:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]</rows>
        <cols>[oracle.42116.690784421298].[sum:AMMO_TRADE_USD:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='AMMO_REVISED (C##CS329E_DAS3734)' name='oracle.42116.690784421298' />
            <datasource caption='ARTICLELEATHER_REVISED (C##CS329E_DAS3734)' name='oracle.42116.691902835650' />
          </datasources>
          <datasource-dependencies datasource='oracle.42116.690784421298'>
            <column caption='Ammo Flow' datatype='string' name='[AMMO_FLOW]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[AMMO_FLOW]' derivation='None' name='[none:AMMO_FLOW:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42116.691902835650'>
            <column caption='Al Country Area' datatype='string' name='[AL_COUNTRY_AREA]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Al Quantity' datatype='real' name='[AL_QUANTITY]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[AL_COUNTRY_AREA]' derivation='None' name='[none:AL_COUNTRY_AREA:nk]' pivot='key' type='nominal' />
            <column-instance column='[AL_QUANTITY]' derivation='Sum' name='[sum:AL_QUANTITY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:AL_COUNTRY_AREA:nk]' />
              <groupfilter function='member' level='[none:AL_COUNTRY_AREA:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[oracle.42116.691902835650].[sum:AL_QUANTITY:qk]' included-values='non-null'>
          </filter>
          <slices>
            <column>[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]</column>
            <column>[oracle.42116.691902835650].[sum:AL_QUANTITY:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[oracle.42116.691902835650].[sum:AL_QUANTITY:qk]' />
              <text column='[oracle.42116.690784421298].[none:AMMO_FLOW:nk]' />
              <text column='[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]' />
              <color column='[oracle.42116.690784421298].[none:AMMO_FLOW:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
        <join-lod-include-overrides>
          <column>[oracle.42116.691902835650].[AL_COUNTRY_AREA]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='ARTICLELEATHER_REVISED (C##CS329E_DAS3734)' name='oracle.42116.691902835650' />
            <datasource caption='AMMO_REVISED (C##CS329E_DAS3734)' name='oracle.42116.690784421298' />
          </datasources>
          <datasource-dependencies datasource='oracle.42116.690784421298'>
            <column caption='Ammo Country Area' datatype='string' name='[AMMO_COUNTRY_AREA]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Ammo Weight' datatype='real' name='[AMMO_WEIGHT]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[AMMO_COUNTRY_AREA]' derivation='None' name='[none:AMMO_COUNTRY_AREA:nk]' pivot='key' type='nominal' />
            <column-instance column='[AMMO_WEIGHT]' derivation='Sum' name='[sum:AMMO_WEIGHT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42116.691902835650'>
            <column caption='Al Country Area' datatype='string' name='[AL_COUNTRY_AREA]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Al Weight' datatype='real' name='[AL_WEIGHT]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[AL_COUNTRY_AREA]' derivation='None' name='[none:AL_COUNTRY_AREA:nk]' pivot='key' type='nominal' />
            <column-instance column='[AL_WEIGHT]' derivation='Sum' name='[sum:AL_WEIGHT:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Albania&quot;' function='range' level='[none:AMMO_COUNTRY_AREA:nk]' to='&quot;Belgium&quot;' />
              <groupfilter from='&quot;Belize&quot;' function='range' level='[none:AMMO_COUNTRY_AREA:nk]' to='&quot;Bulgaria&quot;' />
              <groupfilter from='&quot;Burundi&quot;' function='range' level='[none:AMMO_COUNTRY_AREA:nk]' to='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;Finland&quot;' />
              <groupfilter from='&quot;France&quot;' function='range' level='[none:AMMO_COUNTRY_AREA:nk]' to='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;Guinea&quot;' />
              <groupfilter from='&quot;Guyana&quot;' function='range' level='[none:AMMO_COUNTRY_AREA:nk]' to='&quot;Nepal&quot;' />
              <groupfilter from='&quot;Netherlands&quot;' function='range' level='[none:AMMO_COUNTRY_AREA:nk]' to='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;Oman&quot;' />
              <groupfilter from='&quot;Pakistan&quot;' function='range' level='[none:AMMO_COUNTRY_AREA:nk]' to='&quot;Rep. of Moldova&quot;' />
              <groupfilter from='&quot;Romania&quot;' function='range' level='[none:AMMO_COUNTRY_AREA:nk]' to='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;Samoa&quot;' />
              <groupfilter from='&quot;Saudi Arabia&quot;' function='range' level='[none:AMMO_COUNTRY_AREA:nk]' to='&quot;Slovenia&quot;' />
              <groupfilter from='&quot;Spain&quot;' function='range' level='[none:AMMO_COUNTRY_AREA:nk]' to='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;Togo&quot;' />
              <groupfilter from='&quot;Trinidad and Tobago&quot;' function='range' level='[none:AMMO_COUNTRY_AREA:nk]' to='&quot;Turkmenistan&quot;' />
              <groupfilter from='&quot;USA&quot;' function='range' level='[none:AMMO_COUNTRY_AREA:nk]' to='&quot;Viet Nam&quot;' />
              <groupfilter from='&quot;Yemen&quot;' function='range' level='[none:AMMO_COUNTRY_AREA:nk]' to='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.42116.691902835650].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42116.691902835650].[sum:AL_WEIGHT:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[oracle.42116.690784421298].[sum:AMMO_WEIGHT:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42116.691902835650].[:Measure Names]</column>
            <column>[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[oracle.42116.691902835650].[sum:AL_WEIGHT:qk]' scope='rows' value='Article Leather Weight' />
            <format attr='subtitle' class='0' field='[oracle.42116.691902835650].[sum:AL_WEIGHT:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[oracle.42116.691902835650].[sum:AL_WEIGHT:qk]' scope='rows' value='true' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' field='[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]' value='Georgia' />
            <format attr='text-orientation' field='[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]' value='0' />
            <format attr='text-align' field='[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]' value='auto' />
            <format attr='vertical-align' field='[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]' value='top' />
            <format attr='wrap' field='[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]' value='auto' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]' value='Georgia' />
            <format attr='color' field='[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]' value='#000000' />
            <format attr='font-weight' field='[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]' value='normal' />
            <format attr='font-family' field='[oracle.42116.691902835650].[sum:AL_WEIGHT:qk]' value='Georgia' />
            <format attr='font-size' field='[oracle.42116.691902835650].[sum:AL_WEIGHT:qk]' value='10' />
            <format attr='font-weight' field='[oracle.42116.691902835650].[sum:AL_WEIGHT:qk]' value='bold' />
            <format attr='color' field='[oracle.42116.691902835650].[sum:AL_WEIGHT:qk]' value='#000000' />
            <format attr='font-family' field='[oracle.42116.690784421298].[sum:AMMO_WEIGHT:qk]' value='Georgia' />
            <format attr='font-size' field='[oracle.42116.690784421298].[sum:AMMO_WEIGHT:qk]' value='10' />
            <format attr='color' field='[oracle.42116.690784421298].[sum:AMMO_WEIGHT:qk]' value='#000000' />
            <format attr='font-weight' field='[oracle.42116.690784421298].[sum:AMMO_WEIGHT:qk]' value='bold' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#898989' />
            <format attr='line-pattern' id='refline0' value='none' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern' value='solid' />
            <format attr='stroke-color' value='#d7d7d7' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]' />
              <text column='[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[oracle.42116.691902835650].[sum:AL_WEIGHT:qk]</rows>
        <cols>[oracle.42116.690784421298].[sum:AMMO_WEIGHT:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='AMMO_REVISED (C##CS329E_DAS3734)' name='oracle.42116.690784421298' />
            <datasource caption='ARTICLELEATHER_REVISED (C##CS329E_DAS3734)' name='oracle.42116.691902835650' />
          </datasources>
          <datasource-dependencies datasource='oracle.42116.690784421298'>
            <column caption='Ammo Country Area' datatype='string' name='[AMMO_COUNTRY_AREA]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
            </column>
            <column caption='Ammo Flow' datatype='string' name='[AMMO_FLOW]' role='dimension' type='nominal'>
            </column>
            <column caption='Ammo Quantity Name' datatype='string' name='[AMMO_QUANTITY_NAME]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[AMMO_FLOW]' derivation='Count' name='[cnt:AMMO_FLOW:qk]' pivot='key' type='quantitative' />
            <column-instance column='[AMMO_COUNTRY_AREA]' derivation='None' name='[none:AMMO_COUNTRY_AREA:nk]' pivot='key' type='nominal' />
            <column-instance column='[AMMO_FLOW]' derivation='None' name='[none:AMMO_FLOW:nk]' pivot='key' type='nominal' />
            <column-instance column='[AMMO_QUANTITY_NAME]' derivation='None' name='[none:AMMO_QUANTITY_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='oracle.42116.691902835650'>
            <column caption='Al Flow' datatype='string' name='[AL_FLOW]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[AL_FLOW]' derivation='Count' name='[cnt:AL_FLOW:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:AMMO_COUNTRY_AREA:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[oracle.42116.690784421298].[none:AMMO_FLOW:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:AMMO_FLOW:nk]' member='&quot;Export&quot;' />
              <groupfilter function='member' level='[none:AMMO_FLOW:nk]' member='&quot;Import&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[oracle.42116.690784421298].[none:AMMO_FLOW:nk]</column>
            <column>[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[oracle.42116.690784421298].[none:AMMO_QUANTITY_NAME:nk]' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]' />
              <text column='[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]' />
            </encodings>
            <reference-line axis-column='[oracle.42116.690784421298].[cnt:AMMO_FLOW:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' scope='per-cell' symmetric='false' value-column='[oracle.42116.690784421298].[cnt:AMMO_FLOW:qk]' z-order='1' />
            <reference-line axis-column='[oracle.42116.691902835650].[cnt:AL_FLOW:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' scope='per-cell' symmetric='false' value-column='[oracle.42116.691902835650].[cnt:AL_FLOW:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[oracle.42116.690784421298].[cnt:AMMO_FLOW:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]' />
              <text column='[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[oracle.42116.691902835650].[cnt:AL_FLOW:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]' />
              <text column='[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([oracle.42116.690784421298].[cnt:AMMO_FLOW:qk] + [oracle.42116.691902835650].[cnt:AL_FLOW:qk])</rows>
        <cols>[oracle.42116.690784421298].[none:AMMO_QUANTITY_NAME:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42116.691902835650].[sum:AL_TRADE_USD:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42116.690784421298].[none:AMMO_FLOW:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42116.690784421298].[none:AMMO_FLOW:nk]</field>
          <field>[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42116.690784421298].[:Measure Names]</field>
          <field>[oracle.42116.690784421298].[Ammo Weight (bin)]</field>
          <field>[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]</field>
          <field>[oracle.42116.690784421298].[none:AMMO_FLOW:nk]</field>
          <field>[oracle.42116.690784421298].[none:AMMO_WEIGHT:qk]</field>
          <field>[oracle.42116.691902835650].[:Measure Names]</field>
          <field>[oracle.42116.691902835650].[none:AL_FLOW:nk]</field>
          <field>[oracle.42116.691902835650].[none:AL_WEIGHT:qk]</field>
          <field>[oracle.42116.691902835650].[sum:AL_TRADE_USD:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <geo-search-visibility value='1' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[oracle.42116.690784421298].[:Measure Names]</field>
          <field>[oracle.42116.690784421298].[Ammo Weight (bin)]</field>
          <field>[oracle.42116.690784421298].[none:AMMO_COUNTRY_AREA:nk]</field>
          <field>[oracle.42116.690784421298].[none:AMMO_FLOW:nk]</field>
          <field>[oracle.42116.690784421298].[none:AMMO_QUANTITY_NAME:nk]</field>
          <field>[oracle.42116.690784421298].[none:AMMO_YEAR:qk]</field>
          <field>[oracle.42116.690784421298].[tyr:AMMO_YEAR:qk]</field>
          <field>[oracle.42116.690784421298].[yr:AMMO_YEAR:ok]</field>
          <field>[oracle.42116.691902835650].[none:AL_COUNTRY_AREA:nk]</field>
          <field>[oracle.42116.691902835650].[none:AL_FLOW:nk]</field>
          <field>[oracle.42116.691902835650].[none:AL_QUANTITY_NAME:nk]</field>
          <field>[oracle.42116.691902835650].[none:AL_YEAR:qk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      /H94E3gjtcAh5gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
